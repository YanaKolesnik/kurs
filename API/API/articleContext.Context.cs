//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BasicAuthentication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class articlesEntities : DbContext
    {
        public articlesEntities()
            : base("name=articlesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actors> Actors { get; set; }
        public virtual DbSet<ActorsArticles> ActorsArticles { get; set; }
        public virtual DbSet<Animals> Animals { get; set; }
        public virtual DbSet<Biology> Biology { get; set; }
        public virtual DbSet<BiologyArticles> BiologyArticles { get; set; }
        public virtual DbSet<Birds> Birds { get; set; }
        public virtual DbSet<BirdsArticles> BirdsArticles { get; set; }
        public virtual DbSet<Dino> Dino { get; set; }
        public virtual DbSet<DinoArticles> DinoArticles { get; set; }
        public virtual DbSet<Fish> Fish { get; set; }
        public virtual DbSet<FishArticles> FishArticles { get; set; }
        public virtual DbSet<Games> Games { get; set; }
        public virtual DbSet<GamesArticles> GamesArticles { get; set; }
        public virtual DbSet<Geography> Geography { get; set; }
        public virtual DbSet<GeographyArticles> GeographyArticles { get; set; }
        public virtual DbSet<History> History { get; set; }
        public virtual DbSet<HistoryArticles> HistoryArticles { get; set; }
        public virtual DbSet<Insects> Insects { get; set; }
        public virtual DbSet<InsectsArticles> InsectsArticles { get; set; }
        public virtual DbSet<Inventors> Inventors { get; set; }
        public virtual DbSet<InventorsArticles> InventorsArticles { get; set; }
        public virtual DbSet<Mathematics> Mathematics { get; set; }
        public virtual DbSet<MathematicsArticles> MathematicsArticles { get; set; }
        public virtual DbSet<People> People { get; set; }
        public virtual DbSet<Physics> Physics { get; set; }
        public virtual DbSet<PhysicsArticles> PhysicsArticles { get; set; }
        public virtual DbSet<Science> Science { get; set; }
        public virtual DbSet<Section> Section { get; set; }
        public virtual DbSet<Space> Space { get; set; }
        public virtual DbSet<SpaceArticles> SpaceArticles { get; set; }
        public virtual DbSet<Technologies> Technologies { get; set; }
        public virtual DbSet<TechnologiesArticles> TechnologiesArticles { get; set; }
        public virtual DbSet<Wild> Wild { get; set; }
        public virtual DbSet<WildArticles> WildArticles { get; set; }
        public virtual DbSet<Writers> Writers { get; set; }
        public virtual DbSet<WritersArticles> WritersArticles { get; set; }
    
        public virtual int ActorsProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActorsProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int BiologyProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BiologyProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int BirdsProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BirdsProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int DinoProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DinoProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int FishProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FishProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int GamesProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GamesProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int GeographyProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeographyProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int HistoryProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HistoryProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int InsectsProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsectsProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int InventorsProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventorsProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int MathematicsProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MathematicsProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int PhysicsProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhysicsProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SpaceProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpaceProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int TechnologiesProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TechnologiesProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int WildProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WildProcedure", linkParameter, headerParameter, textParameter);
        }
    
        public virtual int WritersProcedure(string link, string header, string text)
        {
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("header", header) :
                new ObjectParameter("header", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WritersProcedure", linkParameter, headerParameter, textParameter);
        }
    }
}
